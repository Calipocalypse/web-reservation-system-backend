// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wsr.Data;

namespace Wsr.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20220703133735_Added Seeding back")]
    partial class AddedSeedingback
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Wsr.Models.Cost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CostValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cost");
                });

            modelBuilder.Entity("Wsr.Models.PoolTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CostId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CostId");

                    b.ToTable("PoolTables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("88820976-6bc6-40e2-b3af-583c56459ea1"),
                            Description = "Pierwszy od okna",
                            Name = "Stół 1"
                        },
                        new
                        {
                            Id = new Guid("8d971194-dfa1-4288-97e8-21af2736a5da"),
                            Description = "Przy obrazie Johnego K Asteroida",
                            Name = "Stół 2"
                        });
                });

            modelBuilder.Entity("Wsr.Models.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cookie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Wsr.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cebe3f55-e086-413b-a031-2ffdc3708530"),
                            HashedPassword = "6319515c904e91c9b5563aa82ffb248725630f741b58ea900f7ef088dbf4f703",
                            IsAdmin = true,
                            Name = "Zbyszek",
                            Salt = "rY8wXiQK4kw+Mpcw"
                        },
                        new
                        {
                            Id = new Guid("cc2dbbd7-f769-46b9-bb73-3bb31a03e673"),
                            HashedPassword = "1cb09975dfe03db330b6a4688b932727d2ffc4f55a9b4d7db933a728eec33a76",
                            IsAdmin = false,
                            Name = "Marcel",
                            Salt = "p/Nta71H44LTcd8Z"
                        });
                });

            modelBuilder.Entity("Wsr.Models.PoolTable", b =>
                {
                    b.HasOne("Wsr.Models.Cost", "Cost")
                        .WithMany()
                        .HasForeignKey("CostId");

                    b.Navigation("Cost");
                });
#pragma warning restore 612, 618
        }
    }
}
